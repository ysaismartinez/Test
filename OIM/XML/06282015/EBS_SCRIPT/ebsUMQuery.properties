#This property file contains queries used by the connector for reconciliation
#The key in the properties file is used for the attribute 'Query Name' of the
#Task scheduler.

#The keys specified in this properties file are case sensitive and are not allowed 
#to have spaces between them . For eg , keys like UM User Recon= SELECT .......
# are invalid. 

#The query below is used for selecting the responsibilities granted to a user. 
# IMPORTANT!! - End User should not alter this query without informing\consulting the Oracle Identity Management Support Team

# Bug 10211484 - The query for UM_USER_RESPONSIBILITIES is modified (This quesry was created as a part of fix for 
# bug 9801679 and is again getting modified as a part of fix for currect bug (10211484)) - Start
# Bug 9801679 - The query for UM_USER_RESPONSIBILITIES is modified - Start
#UM_USER_RESPONSIBILITIES=select (select application_id \
#                         from fnd_application where \
#                         application_id = frg.responsibility_application_id )Application_Name, \
#                         (select application_id \
#                         from fnd_application where \
#                         application_id = frg.responsibility_application_id )||'~'||frt.responsibility_id AS Responsibility_name, \
#		          TO_CHAR(frg.start_Date) AS start_Date, TO_CHAR(frg.end_date) AS end_date from \
#                         fnd_user_resp_groups_direct frg,fnd_responsibility_tl frt,fnd_responsibility fr where \
#                         frt.application_id = frg.responsibility_application_id and \
#                         frt.responsibility_id = frg.responsibility_id and \
#                         frt.responsibility_id = fr.responsibility_id and \
#                         sysdate between fr.start_Date and nvl(fr.end_date, TO_DATE('31-DEC-4712','dd-mon-yyyy')) and \
#                         sysdate between frg.start_Date and nvl(frg.end_date,TO_DATE('31-DEC-4712','dd-mon-yyyy')) and \
#                         frg.user_id = (select user_id from fnd_user where UPPER(user_name) = :userName) \
#                         order by responsibility_name 

#UM_USER_RESPONSIBILITIES=SELECT responsibility_application_id AS Application_Name, \
#			responsibility_application_id||'~'||RESPONSIBILITY_ID AS Responsibility_name, \
#			TO_CHAR(start_Date) AS start_Date, TO_CHAR(end_date) AS end_date \
#			FROM fnd_user_resp_groups_direct \
#			WHERE sysdate BETWEEN start_Date AND  nvl(end_date,TO_DATE('31-DEC-4712','dd-mon-yyyy')) \
#			AND user_id = (SELECT user_id FROM fnd_user WHERE UPPER(user_name) = :userName) \
#			ORDER BY responsibility_name

# Bug 9801679 - The query for UM_USER_RESPONSIBILITIES is modified - End

UM_USER_RESPONSIBILITIES=SELECT DISTINCT fursgd.responsibility_application_id AS application_name, \
			fursgd.responsibility_application_id || '~' || fursgd.responsibility_id AS responsibility_name, \
			to_char(fursgd.start_date) AS start_date, to_char(fursgd.end_date) AS end_date, \
			fsg.security_group_id as security_group_id \
			FROM fnd_user_resp_groups_direct fursgd \
			INNER JOIN fnd_security_groups_tl fsgt ON fursgd.security_group_id = fsgt.security_group_id \
			INNER JOIN fnd_security_groups fsg ON fsgt.security_group_id = fsg.security_group_id \
			WHERE sysdate BETWEEN fursgd.start_Date \
			AND nvl(fursgd.end_date,TO_DATE('31-DEC-4712','dd-mon-yyyy')) \
			AND fursgd.user_id = (SELECT user_id FROM fnd_user WHERE UPPER(user_name) = :userName) \
			ORDER BY responsibility_name

# Bug 10211484 - The query for UM_USER_RESPONSIBILITIES is modified (This quesry was created as a part of fix for bug 9801679 and is again getting modified as a part of fix for currect bug (10211484)) - End

#The query below is used for selecting the roles granted to a user. 
# IMPORTANT!! - End User should not alter this query without informing\consulting the Oracle Identity Management Support Team
UM_USER_ROLES=SELECT (SELECT fa.application_id FROM fnd_application fa \
		WHERE fa.application_short_name = wlr.owner_tag) application_name, \
		fa.application_id || '~' || (SELECT wfr.name FROM fnd_application fa, \
		wf_local_roles wfr WHERE fa.application_short_name = wfr.owner_tag \
		AND wfr.name = wfur.role_name AND wfr.orig_system_id = wfur.role_orig_system_id) \
		role_name, TO_CHAR(wfur.start_date) AS start_date, TO_CHAR(wfur.expiration_date) AS end_date \
		FROM wf_local_user_roles wfur, wf_local_roles wlr, fnd_application fa \
		WHERE fa.application_short_name = wlr.owner_tag AND wlr.name = wfur.role_name \
		AND wlr.orig_system_id = wfur.role_orig_system_id \
		AND wlr.parent_orig_system_id = wfur.parent_orig_system_id \
		AND wfur.role_orig_system = 'UMX' AND wfur.parent_orig_system = 'UMX' \
		AND sysdate BETWEEN wlr.start_date AND nvl(wlr.expiration_date, TO_DATE('31-DEC-4712','dd-mon-yyyy')) \
		AND sysdate BETWEEN wfur.start_date AND nvl(wfur.expiration_date, TO_DATE('31-DEC-4712','dd-mon-yyyy')) \
		AND wfur.user_name = :userName ORDER BY role_name


#The query below selects the EBS Users who is last updated before the last Last Execution Time of the schedule task. 
UM_USER_RECON=SELECT DISTINCT usr.USER_ID,usr.USER_NAME, usr.DESCRIPTION, usr.EMAIL_ADDRESS,\
		usr.FAX, usr.START_DATE, usr.END_DATE, usr.EMPLOYEE_ID \
		FROM \
		((SELECT USER_ID, LAST_UPDATE_DATE DATE_UPDATED, EMPLOYEE_ID, USER_NAME, DESCRIPTION, EMAIL_ADDRESS, FAX, \
		TO_CHAR(START_DATE) AS START_DATE, TO_CHAR(END_DATE) AS END_DATE FROM FND_USER \
		WHERE ((LAST_UPDATE_DATE - TO_DATE('01011970','ddmmyyyy')) *24*60*60*1000) > :lastExecutionTime) \
		UNION \
		(SELECT respgrp.USER_ID, max(respgrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, fnd.USER_NAME, \
		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
		FND_USER_RESP_GROUPS_DIRECT respgrp INNER JOIN FND_USER fnd ON respgrp.USER_ID=fnd.USER_ID WHERE \
		round((respgrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
		GROUP BY respgrp.USER_ID, fnd.EMPLOYEE_ID, fnd.USER_NAME, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
		fnd.START_DATE, fnd.END_DATE) \
		UNION \
		(SELECT fnd.USER_ID, max(rolegrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, rolegrp.USER_NAME, \
		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
		WF_LOCAL_USER_ROLES rolegrp INNER JOIN FND_USER fnd ON rolegrp.USER_NAME=fnd.USER_NAME WHERE \
		round((rolegrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
		GROUP BY rolegrp.USER_NAME, fnd.EMPLOYEE_ID, fnd.USER_ID, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
		fnd.START_DATE, fnd.END_DATE) \
		) usr WHERE UPPER(user_name) in ('UL76738','UL76739')

# This is the example of using filter query on user_name for the above query.
#UM_USER_RECON=SELECT DISTINCT usr.USER_ID,usr.USER_NAME, usr.DESCRIPTION, usr.EMAIL_ADDRESS,\
#		usr.FAX, usr.START_DATE, usr.END_DATE, usr.EMPLOYEE_ID \
#		FROM \
#		((SELECT USER_ID, LAST_UPDATE_DATE DATE_UPDATED, EMPLOYEE_ID, USER_NAME, DESCRIPTION, EMAIL_ADDRESS, FAX, \
#		TO_CHAR(START_DATE) AS START_DATE, TO_CHAR(END_DATE) AS END_DATE FROM FND_USER \
#		WHERE ((LAST_UPDATE_DATE - TO_DATE('01011970','ddmmyyyy')) *24*60*60*1000) > :lastExecutionTime) \
#		UNION \
#		(SELECT respgrp.USER_ID, max(respgrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, fnd.USER_NAME, \
#		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
#		FND_USER_RESP_GROUPS_DIRECT respgrp INNER JOIN FND_USER fnd ON respgrp.USER_ID=fnd.USER_ID WHERE \
#		round((respgrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
#		GROUP BY respgrp.USER_ID, fnd.EMPLOYEE_ID, fnd.USER_NAME, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
#		fnd.START_DATE, fnd.END_DATE) \
#		UNION \
#		(SELECT fnd.USER_ID, max(rolegrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, rolegrp.USER_NAME, \
#		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
#		WF_LOCAL_USER_ROLES rolegrp INNER JOIN FND_USER fnd ON rolegrp.USER_NAME=fnd.USER_NAME WHERE \
#		round((rolegrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
#		GROUP BY rolegrp.USER_NAME, fnd.EMPLOYEE_ID, fnd.USER_ID, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
#		fnd.START_DATE, fnd.END_DATE) \
#		) usr WHERE UPPER(user_name) = UPPER(:userName)

#The query below selects the EBS Users along with HRMS person record who is last updated before the last Last Execution Time of the schedule task. 
UM_USER_HRMS_RECON=SELECT DISTINCT usr.USER_ID,usr.USER_NAME, usr.DESCRIPTION, usr.EMAIL_ADDRESS,\
		usr.FAX, usr.START_DATE, usr.END_DATE, emp.EMPLOYEE_NUMBER, emp.FIRST_NAME,\
		emp.LAST_NAME, emp.SEX, emp.PERSON_TYPE_ID, emp.BUSINESS_GROUP_ID, TO_CHAR(emp.ORIGINAL_DATE_OF_HIRE) AS ORIGINAL_DATE_OF_HIRE, emp.PERSON_ID \
		FROM \
		((SELECT USER_ID, LAST_UPDATE_DATE DATE_UPDATED, EMPLOYEE_ID, USER_NAME, DESCRIPTION, EMAIL_ADDRESS, FAX, \
		TO_CHAR(START_DATE) AS START_DATE, TO_CHAR(END_DATE) AS END_DATE FROM FND_USER \
		WHERE ((LAST_UPDATE_DATE - TO_DATE('01011970','ddmmyyyy')) *24*60*60*1000) > :lastExecutionTime) \
		UNION \
		(SELECT respgrp.USER_ID, max(respgrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, fnd.USER_NAME, \
		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
		FND_USER_RESP_GROUPS_DIRECT respgrp INNER JOIN FND_USER fnd ON respgrp.USER_ID=fnd.USER_ID WHERE \
		round((respgrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
		GROUP BY respgrp.USER_ID, fnd.EMPLOYEE_ID, fnd.USER_NAME, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
		fnd.START_DATE, fnd.END_DATE) \
		UNION \
		(SELECT fnd.USER_ID, max(rolegrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, rolegrp.USER_NAME, \
		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
		WF_LOCAL_USER_ROLES rolegrp INNER JOIN FND_USER fnd ON rolegrp.USER_NAME=fnd.USER_NAME WHERE \
		round((rolegrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
		GROUP BY rolegrp.USER_NAME, fnd.EMPLOYEE_ID, fnd.USER_ID, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
		fnd.START_DATE, fnd.END_DATE) \
		) usr \
		LEFT JOIN APPS.PER_ALL_PEOPLE_F emp ON usr.EMPLOYEE_ID=emp.PERSON_ID AND SYSDATE \
		between emp.effective_start_date and emp.effective_end_Date
		
		
# This is the example of using filter query on user_name.
#UM_USER_HRMS_RECON=SELECT DISTINCT usr.USER_ID, usr.USER_NAME, usr.DESCRIPTION, usr.EMAIL_ADDRESS,\
#		usr.FAX, usr.START_DATE, usr.END_DATE, emp.EMPLOYEE_NUMBER, emp.FIRST_NAME,\
#		emp.LAST_NAME, emp.SEX, emp.PERSON_TYPE_ID, emp.BUSINESS_GROUP_ID, emp.ORIGINAL_DATE_OF_HIRE, emp.PERSON_ID \
#		FROM \
#		((SELECT USER_ID, LAST_UPDATE_DATE DATE_UPDATED, EMPLOYEE_ID, USER_NAME, DESCRIPTION, EMAIL_ADDRESS, FAX, \
#		TO_CHAR(START_DATE) AS START_DATE, TO_CHAR(END_DATE) AS START_DATE FROM FND_USER \
#		WHERE ((LAST_UPDATE_DATE - TO_DATE('01011970','ddmmyyyy')) *24*60*60*1000) > :lastExecutionTime) \
#		UNION \
#		(SELECT respgrp.USER_ID, max(respgrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, fnd.USER_NAME, \
#		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
#		FND_USER_RESP_GROUPS_DIRECT respgrp INNER JOIN FND_USER fnd ON respgrp.USER_ID=fnd.USER_ID WHERE \
#		round((respgrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
#		GROUP BY respgrp.USER_ID, fnd.EMPLOYEE_ID, fnd.USER_NAME, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
#		fnd.START_DATE, fnd.END_DATE) \
#		UNION \
#		(SELECT fnd.USER_ID, max(rolegrp.LAST_UPDATE_DATE) DATE_UPDATED, fnd.EMPLOYEE_ID, rolegrp.USER_NAME, \
#		fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE FROM \
#		WF_LOCAL_USER_ROLES rolegrp INNER JOIN FND_USER fnd ON rolegrp.USER_NAME=fnd.USER_NAME WHERE \
#		round((rolegrp.LAST_UPDATE_DATE - to_date('01011970', 'ddmmyyyy')) * 1440 * 60 * 1000)> :lastExecutionTime \
#		GROUP BY rolegrp.USER_NAME, fnd.EMPLOYEE_ID, fnd.USER_ID, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS,fnd.FAX, \
#		fnd.START_DATE, fnd.END_DATE) \
#		) usr \
#		LEFT JOIN APPS.PER_ALL_PEOPLE_F emp ON usr.EMPLOYEE_ID=emp.PERSON_ID AND SYSDATE \
#		between emp.effective_start_date and emp.effective_end_Date WHERE UPPER(user_name) = UPPER(:userName)


#The query below selects the EBS Users along with TCA person party record who is last updated before the last Last Execution Time of the schedule task. 
UM_USER_TCA_RECON=SELECT DISTINCT USR.USER_ID, usr.USER_NAME, usr.DESCRIPTION, usr.EMAIL_ADDRESS, usr.FAX, \
				usr.START_DATE, usr.END_DATE, usr.PERSON_PARTY_ID, per.PERSON_FIRST_NAME, per.PERSON_LAST_NAME \
				FROM( \
				(SELECT USER_ID, LAST_UPDATE_DATE DATE_UPDATED, USER_NAME, DESCRIPTION, EMAIL_ADDRESS, FAX, \
				TO_CHAR(START_DATE) AS START_DATE, TO_CHAR(END_DATE) AS END_DATE, PERSON_PARTY_ID FROM FND_USER \
				WHERE((LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *24 *60 *60 *1000) > :lastExecutionTime)  \
				UNION \
				(SELECT RESPGRP.USER_ID,  MAX(RESPGRP.LAST_UPDATE_DATE) DATE_UPDATED, fnd.USER_NAME,  \
				fnd.DESCRIPTION,  fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE, fnd.PERSON_PARTY_ID \
				FROM fnd_USER_RESP_GROUPS_DIRECT RESPGRP \
				INNER JOIN fnd_USER fnd ON RESPGRP.USER_ID = fnd.USER_ID \
				WHERE ROUND((respgrp.LAST_UPDATE_DATE -TO_DATE('01011970','DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime \
				GROUP BY respgrp.USER_ID, fnd.USER_NAME,  fnd.DESCRIPTION,  fnd.EMAIL_ADDRESS,  fnd.FAX,  fnd.START_DATE, \
				fnd.END_DATE, fnd.PERSON_PARTY_ID)  \
				UNION \
				(SELECT fnd.USER_ID,  MAX(ROLEGRP.LAST_UPDATE_DATE) DATE_UPDATED,  rolegrp.USER_NAME,  fnd.DESCRIPTION, \
				fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS START_DATE, fnd.PERSON_PARTY_ID \
				FROM WF_LOCAL_USER_ROLES rolegrp \
				INNER JOIN fnd_USER fnd ON rolegrp.USER_NAME = fnd.USER_NAME \
				WHERE ROUND((rolegrp.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime \
				GROUP BY rolegrp.USER_NAME, fnd.USER_ID, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, fnd.START_DATE, \
				fnd.END_DATE, fnd.PERSON_PARTY_ID) ) \
				usr LEFT JOIN HZ_PARTIES PER ON usr.PERSON_PARTY_ID = per.PARTY_ID AND per.PARTY_TYPE = 'PERSON'  


# This is the example of using filter query on user_name.
#UM_USER_TCA_RECON=SELECT DISTINCT USR.USER_ID, usr.USER_NAME, usr.DESCRIPTION, usr.EMAIL_ADDRESS, usr.FAX, \
#   				usr.START_DATE, usr.END_DATE, usr.PERSON_PARTY_ID, per.PERSON_FIRST_NAME, per.PERSON_LAST_NAME \
#   				FROM( \
#   				(SELECT USER_ID, LAST_UPDATE_DATE DATE_UPDATED, USER_NAME, DESCRIPTION, EMAIL_ADDRESS, FAX, \
#   				TO_CHAR(START_DATE) AS START_DATE, TO_CHAR(END_DATE) AS END_DATE, PERSON_PARTY_ID FROM FND_USER \
#   				WHERE((LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *24 *60 *60 *1000) > :lastExecutionTime)  \
#   				UNION \
#   				(SELECT RESPGRP.USER_ID,  MAX(RESPGRP.LAST_UPDATE_DATE) DATE_UPDATED, fnd.USER_NAME,  \
#   				fnd.DESCRIPTION,  fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS END_DATE, fnd.PERSON_PARTY_ID \
#   				FROM fnd_USER_RESP_GROUPS_DIRECT RESPGRP \
#   				INNER JOIN fnd_USER fnd ON RESPGRP.USER_ID = fnd.USER_ID \
#   				WHERE ROUND((respgrp.LAST_UPDATE_DATE -TO_DATE('01011970','DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime \
#   				GROUP BY respgrp.USER_ID, fnd.USER_NAME,  fnd.DESCRIPTION,  fnd.EMAIL_ADDRESS,  fnd.FAX,  fnd.START_DATE, \
#   				fnd.END_DATE, fnd.PERSON_PARTY_ID)  \
#   				UNION \
#   				(SELECT fnd.USER_ID,  MAX(ROLEGRP.LAST_UPDATE_DATE) DATE_UPDATED,  rolegrp.USER_NAME,  fnd.DESCRIPTION, \
#   				fnd.EMAIL_ADDRESS, fnd.FAX, TO_CHAR(fnd.START_DATE) AS START_DATE, TO_CHAR(fnd.END_DATE) AS START_DATE, fnd.PERSON_PARTY_ID \
#   				FROM WF_LOCAL_USER_ROLES rolegrp \
#   				INNER JOIN fnd_USER fnd ON rolegrp.USER_NAME = fnd.USER_NAME \
#   				WHERE ROUND((rolegrp.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime \
#   				GROUP BY rolegrp.USER_NAME, fnd.USER_ID, fnd.DESCRIPTION, fnd.EMAIL_ADDRESS, fnd.FAX, fnd.START_DATE, \
#   				fnd.END_DATE, fnd.PERSON_PARTY_ID) ) \
#   				usr LEFT JOIN HZ_PARTIES PER ON usr.PERSON_PARTY_ID = per.PARTY_ID AND per.PARTY_TYPE = 'PERSON'  \
#   				WHERE UPPER(user_name) = UPPER(:userName)
#   
