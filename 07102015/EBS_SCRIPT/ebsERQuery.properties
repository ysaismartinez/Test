#This property file contains queries used by the connector for reconciliation
#The key in the properties file is used for the attribute 'Query Name' of the
#Task scheduler.

#The keys specified in this properties file are case sensitive and are not allowed 
#to have spaces between them . For eg , keys like Full Recon= SELECT .......
#are invalid. 

#This query reconciles the current employees
ReconcileCurrentPersons=SELECT PAPF.PERSON_ID AS PERSON_ID1, \
			PAPF.PERSON_ID AS PERSON_ID2, \
			PAPF.FIRST_NAME AS FIRST_NAME, \
			PAPF.LAST_NAME AS LAST_NAME, \
			PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS, \
			PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE, \
			TO_CHAR(PAPF.EFFECTIVE_START_DATE) AS EFFECTIVE_START_DATE, \
			PAPF.EMPLOYEE_NUMBER AS EMPLOYEE_NUMBER, \
			TO_CHAR(PAPF.EFFECTIVE_END_DATE) AS EFFECTIVE_END_DATE, \
			PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID, \
			PAAF.SUPERVISOR_ID AS SUPERVISOR_ID , \
			SUP.FULL_NAME AS SUPERVISOR_NAME, \
			PJ.NAME AS JOB, \
			PG.NAME AS GRADE, \
			HAOU.NAME AS DEPARTMENT \
			FROM PER_ALL_PEOPLE_F PAPF, \
			PER_PERSON_TYPES PPT , \
			PER_PERSON_TYPE_USAGES_F PPU, \
			PER_ALL_ASSIGNMENTS_F PAAF, \
			PER_ALL_PEOPLE_F SUP, \
			PER_JOBS PJ, \
			PER_GRADES PG, \
			HR_ALL_ORGANIZATION_UNITS HAOU \
			WHERE  PPT.USER_PERSON_TYPE IN('Employee','Contractor','Contingent Employee') \
			AND    PPU.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
			AND    PPU.PERSON_ID = PAPF.PERSON_ID \
			AND    PAAF.PERSON_ID = PAPF.PERSON_ID \
			AND    PAAF.PRIMARY_FLAG = 'Y' \
			AND    PAAF.SUPERVISOR_ID = SUP.person_id(+) \
			AND    PAAF.job_id  = PJ.job_id(+) \
			AND    PAAF.grade_id = PG.grade_id(+) \
			AND    PAAF.organization_id = HAOU.organization_id(+) \
			AND    PAPF.BUSINESS_GROUP_ID = :businessGroupID \
			AND    PAPF.CURRENT_EMPLOYEE_FLAG = 'Y' \
			AND    SUP.CURRENT_EMPLOYEE_FLAG(+) = 'Y' \
			AND  PAPF.EFFECTIVE_START_DATE BETWEEN :fromDate AND :toDate \
			AND(TRUNC(SYSDATE) BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE) \
			AND(TRUNC(SYSDATE) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE) \
			AND(TRUNC(SYSDATE) BETWEEN PAAF.EFFECTIVE_START_DATE AND PAAF.EFFECTIVE_END_DATE) \
			AND(TRUNC(SYSDATE) BETWEEN SUP.EFFECTIVE_START_DATE(+) AND SUP.EFFECTIVE_END_DATE(+)) \
			AND ( (ROUND((PAPF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) \
			OR (ROUND((PAAF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) ) \
			ORDER BY PAPF.PERSON_ID

		

#This query reconciles the Terminated employeesTerminatedEmployees
TerminatedPersons=SELECT PAPF.PERSON_ID AS PERSON_ID1, \
		PAPF.PERSON_ID AS PERSON_ID2, \
		PAPF.FIRST_NAME AS FIRST_NAME, \
		PAPF.LAST_NAME AS LAST_NAME, \
		PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS, \
		PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE, \
		TO_CHAR(PAPF.EFFECTIVE_START_DATE) AS EFFECTIVE_START_DATE, \
		PAPF.EMPLOYEE_NUMBER AS EMPLOYEE_NUMBER, \
		TO_CHAR(PAPF.EFFECTIVE_END_DATE) AS EFFECTIVE_END_DATE, \
		PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID, \
		PAAF.SUPERVISOR_ID AS SUPERVISOR_ID , \
		SUP.FULL_NAME AS SUPERVISOR_NAME, \
		PJ.NAME AS JOB, \
		PG.NAME AS GRADE, \
		HAOU.NAME AS DEPARTMENT \
		FROM PER_ALL_PEOPLE_F PAPF, \
		PER_PERIODS_OF_SERVICE PPS, \
		PER_PERSON_TYPES PPT , \
		PER_PERSON_TYPE_USAGES_F PPU, \
		PER_ALL_ASSIGNMENTS_F PAAF, \
		PER_ALL_PEOPLE_F SUP, \
		PER_JOBS PJ, \
		PER_GRADES PG, \
		HR_ALL_ORGANIZATION_UNITS HAOU \
		WHERE  PPT.USER_PERSON_TYPE IN('Employee','Contractor','Contingent Employee') \
		AND    PPU.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
		AND    PPU.PERSON_ID = PAPF.PERSON_ID \
		AND    PAAF.PERSON_ID = PAPF.PERSON_ID \
		AND    PAAF.PRIMARY_FLAG = 'Y' \
		AND    PAAF.SUPERVISOR_ID = SUP.person_id(+) \
		AND    PAAF.job_id  = PJ.job_id(+) \
		AND    PAAF.grade_id = PG.grade_id(+) \
		AND    PAAF.organization_id = HAOU.organization_id(+) \
		AND    PAAF.period_of_service_id = PPS.period_of_service_id(+) \
		AND    ACTUAL_TERMINATION_DATE BETWEEN :fromDate AND :toDate \
		AND    ACTUAL_TERMINATION_DATE BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE \
		AND    ACTUAL_TERMINATION_DATE BETWEEN PAAF.EFFECTIVE_START_DATE AND PAAF.EFFECTIVE_END_DATE  \
		AND    (TRUNC(SYSDATE-6/24) BETWEEN SUP.EFFECTIVE_START_DATE(+) AND SUP.EFFECTIVE_END_DATE(+)) \
		AND    PAPF.BUSINESS_GROUP_ID = :businessGroupID \
		AND    PAPF.PERSON_ID = PPS.PERSON_ID \
		AND    ACTUAL_TERMINATION_DATE = PAPF.EFFECTIVE_END_DATE \
		AND  (  (ROUND((PAPF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) \
		OR    (ROUND((PAAF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) ) \
		ORDER BY PAPF.PERSON_ID

		
		
#This query reconciles the future hired employees
FutureHires=SELECT PAPF.PERSON_ID AS PERSON_ID1, \
		PAPF.PERSON_ID AS PERSON_ID2, \
		PAPF.FIRST_NAME AS FIRST_NAME, \
		PAPF.LAST_NAME AS LAST_NAME, \
		PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS, \
		PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE, \
		TO_CHAR(PAPF.EFFECTIVE_START_DATE) AS EFFECTIVE_START_DATE, \
		PAPF.EMPLOYEE_NUMBER AS EMPLOYEE_NUMBER, \
		TO_CHAR(PAPF.EFFECTIVE_END_DATE) AS EFFECTIVE_END_DATE, \
		PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID , \
		PAAF.SUPERVISOR_ID AS SUPERVISOR_ID , \
		SUP.FULL_NAME AS SUPERVISOR_NAME, \
		PJ.NAME AS JOB, \
		PG.NAME AS GRADE, \
		HAOU.NAME AS DEPARTMENT \
		FROM PER_ALL_PEOPLE_F PAPF, \
		PER_PERIODS_OF_SERVICE PPS, \
		PER_PERSON_TYPES PPT , \
		PER_PERSON_TYPE_USAGES_F PPU, \
		PER_ALL_ASSIGNMENTS_F PAAF, \
		PER_ALL_PEOPLE_F SUP, \
		PER_JOBS PJ, \
		PER_GRADES PG, \
		HR_ALL_ORGANIZATION_UNITS HAOU \
		WHERE  PPT.USER_PERSON_TYPE IN('Employee','Contractor','Contingent Employee') \
		AND    PPU.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
		AND    PPU.PERSON_ID = PAPF.PERSON_ID \
		AND    PAAF.PERSON_ID = PAPF.PERSON_ID \
		AND    PAAF.PRIMARY_FLAG = 'Y' \
		AND    PAAF.SUPERVISOR_ID = SUP.person_id(+) \
		AND    PAAF.job_id  = PJ.job_id(+) \
		AND    PAAF.grade_id = PG.grade_id(+) \
		AND    PAAF.organization_id = HAOU.organization_id(+) \
		AND    PAAF.period_of_service_id = PPS.period_of_service_id(+) \
		AND    PAPF.CURRENT_EMPLOYEE_FLAG = 'Y' \
		AND    SUP.CURRENT_EMPLOYEE_FLAG(+) = 'Y' \
		AND   PAPF.EFFECTIVE_START_DATE BETWEEN :fromDate AND :toDate \
		AND   (TRUNC(DATE_START) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE) \
		AND    PAAF.EFFECTIVE_START_DATE >= TRUNC(DATE_START) \
		AND    SUP.EFFECTIVE_START_DATE(+) <= PAAF.EFFECTIVE_START_DATE \
		AND   SUP.EFFECTIVE_END_DATE(+) > TRUNC(SYSDATE+18/24) \
		AND   (TRUNC(DATE_START) BETWEEN PAAF.EFFECTIVE_START_DATE AND PAAF.EFFECTIVE_END_DATE) \
		AND    PPS.DATE_START > (SYSDATE+18/24)  \
		AND    PAPF.PERSON_ID = PPS.PERSON_ID \
		AND PAPF.BUSINESS_GROUP_ID = :businessGroupID \
		AND PAPF.EFFECTIVE_START_DATE = PPS.DATE_START \
		AND PAPF.CURRENT_EMPLOYEE_FLAG = 'Y' \
		AND (   (ROUND((PAPF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) \
		OR    (ROUND((PAAF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) ) \
		ORDER BY PAPF.PERSON_ID
			
		
#This query reconciles the employees who have changed their departments
ChangedDepartments=SELECT PAPF.PERSON_ID AS PERSON_ID1,PAPF.PERSON_ID AS PERSON_ID2, \
			PAPF.FIRST_NAME AS FIRST_NAME, \
			PAPF.LAST_NAME AS LAST_NAME, \
			PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS, \
			PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE, \
			TO_CHAR(PAPF.EFFECTIVE_START_DATE) AS EFFECTIVE_START_DATE, \
			PAPF.EMPLOYEE_NUMBER AS EMPLOYEE_NUMBER, \
			TO_CHAR(PAPF.EFFECTIVE_END_DATE) AS EFFECTIVE_END_DATE, \
			PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID, \
			O_PAAF.SUPERVISOR_ID AS SUPERVISOR_ID, \
			SUP.FULL_NAME AS SUPERVISOR_NAME, \
			PJ.NAME AS JOB, \
			PG.NAME AS GRADE, \
			(Select Name from HR_ALL_ORGANIZATION_UNITS HAOU WHERE HAOU.ORGANIZATION_ID = O_PAAF.ORGANIZATION_ID) AS DEPARTMENT \
			FROM PER_ALL_PEOPLE_F PAPF, \
			PER_ALL_ASSIGNMENTS_F N_PAAF, \
			PER_ALL_ASSIGNMENTS_F O_PAAF, \
			PER_PERSON_TYPES PPT, \
			PER_PERSON_TYPE_USAGES_F PPU, \
			PER_ALL_PEOPLE_F SUP, \
			PER_JOBS PJ, \
			PER_GRADES PG \
			WHERE N_PAAF.ASSIGNMENT_ID = O_PAAF.ASSIGNMENT_ID  \
			AND N_PAAF.ORGANIZATION_ID <> O_PAAF.ORGANIZATION_ID \
			AND PAPF.PERSON_ID = N_PAAF.PERSON_ID \
			AND PPT.USER_PERSON_TYPE IN('Employee','Contractor','Contingent Worker') \
			AND PPU.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
			AND PPU.PERSON_ID = PAPF.PERSON_ID \
			AND(TRUNC(SYSDATE) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE)  \
			AND PAPF.BUSINESS_GROUP_ID = :businessGroupID \
			AND  O_PAAF.job_id  = PJ.job_id(+) \
			AND  O_PAAF.grade_id = PG.grade_id(+) \
			AND  O_PAAF.SUPERVISOR_ID = SUP.person_id(+) \
			AND EXISTS (SELECT 'X' FROM HR_ALL_ORGANIZATION_UNITS HAOU WHERE HAOU.ORGANIZATION_ID = N_PAAF.ORGANIZATION_ID \
			AND HAOU.TYPE = 'DEP') \
			AND EXISTS (SELECT 'X' FROM HR_ALL_ORGANIZATION_UNITS HAOU \
			WHERE HAOU.ORGANIZATION_ID = O_PAAF.ORGANIZATION_ID AND HAOU.TYPE = 'DEP') \
			AND O_PAAF.EFFECTIVE_START_DATE = N_PAAF.EFFECTIVE_END_DATE + 1 \
			AND PAPF.CURRENT_EMPLOYEE_FLAG = 'Y'  \
			AND SUP.CURRENT_EMPLOYEE_FLAG(+) = 'Y' \
			AND O_PAAF.EFFECTIVE_START_DATE BETWEEN :fromDate AND :toDate \
			AND O_PAAF.EFFECTIVE_START_DATE BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE  \
			AND O_PAAF.EFFECTIVE_START_DATE BETWEEN SUP.EFFECTIVE_START_DATE(+) AND SUP.EFFECTIVE_END_DATE(+) \
			AND ( (ROUND((PAPF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) \
			OR (ROUND((O_PAAF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) ) \
			ORDER BY PAPF.PERSON_ID


#This query is a combination of ReconcileCurrentPersons, FutureHires and Terminated Employees.
ReconcileAllPersons=SELECT * \
FROM (SELECT PAPF.PERSON_ID AS \
PERSON_ID1, \
    PAPF.PERSON_ID AS PERSON_ID2, \
    PAPF.FIRST_NAME AS FIRST_NAME, \
    PAPF.LAST_NAME AS LAST_NAME, \
    PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS, \
    PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE, \
    PPT.SYSTEM_PERSON_TYPE AS SYSTEM_PERSON_TYPE, \
    TO_CHAR(NVL((SELECT MAX(POS.DATE_START) FROM APPS.PER_PERIODS_OF_SERVICE POS WHERE POS.PERSON_ID = PAPF.PERSON_ID), \
    (SELECT MAX(POP.DATE_START) FROM APPS.PER_PERIODS_OF_PLACEMENT POP WHERE POP.PERSON_ID = PAPF.PERSON_ID)),'DD-MON-YYYY')  EFFECTIVE_START_DATE, \
    NVL(papf.employee_number,papf.npw_number) as EMPLOYEE_NUMBER, \
    DECODE(TO_CHAR(PAPF.EFFECTIVE_END_DATE,'DD-MON-YYYY'),'31-DEC-4712',NULL,TO_CHAR(PAPF.EFFECTIVE_END_DATE,'DD-MON-YYYY')) AS EFFECTIVE_END_DATE, \
    PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID, \
    PAAF.SUPERVISOR_ID AS SUPERVISOR_ID , \
    (select substr((LISTAGG(xyz.EMPLOYEE_NUMBER, '|') WITHIN GROUP (ORDER BY xyz.EMPLOYEE_NUMBER))||'|',0,instr((LISTAGG(xyz.EMPLOYEE_NUMBER, '|') \
WITHIN GROUP (ORDER BY xyz.EMPLOYEE_NUMBER))||'|', '|')-1 ) \
from PER_ALL_PEOPLE_F xyz where xyz.person_id=PAAF.SUPERVISOR_ID) as MANAGER_EMP_NO, \
    SUP.FULL_NAME AS SUPERVISOR_NAME, \
    PJ.NAME AS JOB, \
    PG.NAME AS GRADE, \
    HAOU.NAME AS DEPARTMENT, \
    'Internal User' as USERORGINDICATOR, \
    TO_CHAR(PAAF.projected_assignment_end,'DD-MON-YYYY') as projected_end_date, \
    nvl(PAAF.work_at_home,'N') as home_worker_flag, \
DECODE(NVL(papf.current_employee_flag,papf.current_npw_flag),'Y','A','T') as Assignment_Status, \
HAOU.NAME business_group, \
PAPF.known_as preferred_name, \
PAPF.MIDDLE_NAMES, \
PAPF.full_name Full_Name, \
LOC.location_code as LOCATION, \
LOC.attribute6 as Region, \
LOC.country as country_Code, \
LOC.address_line_1, \
LOC.address_line_2, \
LOC.town_or_city as town_or_city, \
LOC.region_2 as region_2, \
LOC.postal_code as postal_code, \
dpo.act_segment1|| '.'|| \
dpo.act_segment2|| '.'|| \
dpo.act_segment3|| '.'|| \
dpo.act_segment4|| '.'|| \
dpo.act_segment5|| '.'|| \
dpo.act_segment6|| '.'|| \
dpo.act_segment7|| '.'|| \
dpo.act_segment8|| '.'|| \
dpo.act_segment9 AS default_expense_account, \
HAOU.NAME hr_organization, \
(CASE \
   WHEN PAAF.employment_category = 'IN' THEN 'Employee' \
   ELSE (SELECT DECODE(typ.user_person_type,'Employee and Applicant','Employee',typ.user_person_type) \
         FROM   hr.per_person_types typ, \
                hr.per_person_type_usages_f ptuf1 \
         WHERE  ptuf1.person_id = PAPF.person_id \
             AND    ptuf1.person_type_id = typ.person_type_id \
              AND(TRUNC(SYSDATE) BETWEEN ptuf1.EFFECTIVE_START_DATE AND ptuf1.EFFECTIVE_END_DATE) \
             AND    typ.system_person_type IN ('EMP_APL', 'EMP', 'CWK') ) \
       END)AS identity_type, \
    (SELECT ter.territory_short_name FROM fnd_territories_tl ter WHERE  ter.territory_code = loc.country AND  ter.LANGUAGE='US') Country, \
    (SELECT ter.last_update_date     FROM fnd_territories_tl ter WHERE  ter.territory_code = loc.country AND  ter.LANGUAGE='US') Country_last_update, \
    (SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:"?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'W1' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM   hr.per_phones pp2 \
                       WHERE  pp2.parent_table = pp.parent_table \
                       AND    pp2.parent_id    = pp.parent_id \
                       AND    pp2.phone_type   = pp.phone_type)) Work_Primary, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:""?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'WM' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM   hr.per_phones pp2 \
                       WHERE  pp2.parent_table = pp.parent_table \
                       AND    pp2.parent_id    = pp.parent_id \
                       AND    pp2.phone_type   = pp.phone_type)) Work_Mobile, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:""?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type = 'WE' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM hr.per_phones pp2 \
                       WHERE pp2.parent_table = pp.parent_table \
                       AND pp2.parent_id      = pp.parent_id \
                       AND pp2.phone_type     = pp.phone_type)) Extension, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:"?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'WF' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE)  BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id    = PAPF.person_id \
 AND    pp.phone_id     = (SELECT MAX(pp2.phone_id) \
                           FROM   hr.per_phones pp2 \
                           WHERE  pp2.parent_table = pp.parent_table \
                           AND    pp2.parent_id    = pp.parent_id \
                               AND    pp2.phone_type   = pp.phone_type)) Work_Fax, \
    (SELECT MAX(pp.last_update_date) \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type IN ('WF','WM','W1','WE') \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE)  BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id    = PAPF.person_id) Phone_last_update, \
HAOU.NAME organization_name, \
(SELECT SUBSTR(listagg(NVL(employee_number,npw_number),'|') \
 within GROUP (ORDER BY NVL(employee_number,npw_number))||'|',0,INSTR(listagg(NVL(employee_number,npw_number),'|') \
 within GROUP (ORDER BY NVL(employee_number,npw_number))||'|','|') -1) \
 FROM   per_all_people_f \
 WHERE person_id = (SELECT employee_id \
                    FROM   fnd_user \
                    WHERE  user_id=papf.created_by)) AS CREATED_BY, \
 NVL((SELECT pei.pei_information1 \
      FROM   hr.per_people_extra_info pei \
      WHERE  pei.information_type LIKE 'XX_UL_Service_Desk_Level' \
      AND    pei.person_id = PAPF.person_id \
       ),DECODE(PJ.attribute5,'E','Gold','D','Silver',NULL)) VIP_Status, \
    (SELECT last_update_date \
     FROM   hr.per_people_extra_info pei \
     WHERE  pei.information_type LIKE 'XX_UL_Service_Desk_Level' \
     AND    pei.person_id = PAPF.person_id) VIP_Status_last_update, \
    GREATEST( \
        NVL(PAPF.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PPT.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PPU.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PAAF.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(SUP.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PJ.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(HAOU.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(LOC.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(dpo.GREATEST_LAST_UPDATE_DATE,:fromDate) \
    ) UPDATE_DATE \
    ,'Active' Status \
    FROM PER_ALL_PEOPLE_F PAPF, \
        PER_PERSON_TYPES PPT, \
        PER_PERSON_TYPE_USAGES_F PPU, \
        PER_ALL_ASSIGNMENTS_F PAAF, \
        PER_ALL_PEOPLE_F SUP, \
        PER_JOBS PJ, \
        PER_GRADES PG, \
        HR_ALL_ORGANIZATION_UNITS HAOU, \
        HR_LOCATIONS_ALL LOC, \
        hr_pay_interface_accounting_v dpo \
    WHERE PPT.SYSTEM_PERSON_TYPE IN ('EMP','CWK') \
        AND PAAF.assignment_type in ('E','C') \
        AND PPU.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
        AND PPU.PERSON_ID = PAPF.PERSON_ID \
        AND PAAF.PERSON_ID = PAPF.PERSON_ID \
        AND PAAF.PRIMARY_FLAG = 'Y' \
        AND PAAF.SUPERVISOR_ID = SUP.person_id(+) \
        AND PAAF.job_id  = PJ.job_id(+) \
        AND PAAF.grade_id = PG.grade_id(+) \
        AND PAAF.organization_id = HAOU.organization_id(+) \
        AND PAAF.location_id = LOC.location_id (+) \
AND PAAF.assignment_id = dpo.assignment_id(+) \
        AND NVL(papf.current_employee_flag,nvl(papf.current_npw_flag,'N')) = 'Y' \
        AND greatest( \
            NVL(PAPF.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(PPT.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(PPU.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(PAAF.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(SUP.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(PJ.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(HAOU.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(LOC.LAST_UPDATE_DATE,:fromDate) \
            ,NVL(dpo.GREATEST_LAST_UPDATE_DATE,:fromDate) \
            ) between :fromDate AND :toDate \
        AND(TRUNC(SYSDATE) BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE) \
        AND(TRUNC(SYSDATE) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE) \
        AND(TRUNC(SYSDATE) BETWEEN PAAF.EFFECTIVE_START_DATE AND PAAF.EFFECTIVE_END_DATE) \
        AND(TRUNC(SYSDATE) BETWEEN SUP.EFFECTIVE_START_DATE(+) AND SUP.EFFECTIVE_END_DATE(+)) \
UNION \
SELECT PAPF.PERSON_ID AS PERSON_ID1, \
    PAPF.PERSON_ID AS PERSON_ID2, \
    PAPF.FIRST_NAME AS FIRST_NAME, \
    PAPF.LAST_NAME AS LAST_NAME, \
    PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS, \
    PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE, \
    PPT.SYSTEM_PERSON_TYPE AS SYSTEM_PERSON_TYPE, \
    TO_CHAR(NVL(PPS.DATE_START,POP.DATE_START),'DD-MON-YYYY')  EFFECTIVE_START_DATE, \
    NVL(papf.employee_number,papf.npw_number) as EMPLOYEE_NUMBER, \
    DECODE(TO_CHAR(PAPF.EFFECTIVE_END_DATE,'DD-MON-YYYY'),'31-DEC-4712',NULL,TO_CHAR(PAPF.EFFECTIVE_END_DATE+6/24,'DD-MON-YYYY')) AS EFFECTIVE_END_DATE, \
    PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID, \
    PAAF.SUPERVISOR_ID AS SUPERVISOR_ID , \
    (select substr((LISTAGG(xyz.EMPLOYEE_NUMBER, '|') WITHIN GROUP (ORDER BY xyz.EMPLOYEE_NUMBER))||'|',0,instr((LISTAGG(xyz.EMPLOYEE_NUMBER, '|') \
WITHIN GROUP (ORDER BY xyz.EMPLOYEE_NUMBER))||'|', '|')-1 ) \
from PER_ALL_PEOPLE_F xyz where xyz.person_id=PAAF.SUPERVISOR_ID) as MANAGER_EMP_NO, \
    SUP.FULL_NAME AS SUPERVISOR_NAME, \
    PJ.NAME AS JOB, \
    PG.NAME AS GRADE, \
    HAOU.NAME AS DEPARTMENT, \
    'Internal User' as USERORGINDICATOR,TO_CHAR(PAAF.projected_assignment_end,'DD-MON-YYYY') as projected_end_date, \
    nvl(PAAF.work_at_home,'N') as home_worker_flag, \
DECODE(NVL(papf.current_employee_flag,papf.current_npw_flag),'Y','A','T') as Assignment_Status, \
HAOU.NAME business_group, \
PAPF.known_as preferred_name, \
PAPF.MIDDLE_NAMES, \
PAPF.full_name Full_Name, \
LOC.location_code as LOCATION, \
LOC.attribute6 as Region, \
LOC.country as country_Code, \
LOC.address_line_1, \
LOC.address_line_2, \
LOC.town_or_city as town_or_city, \
LOC.region_2 as region_2, \
LOC.postal_code as postal_code, \
dpo.act_segment1|| '.'|| \
dpo.act_segment2|| '.'|| \
dpo.act_segment3|| '.'|| \
dpo.act_segment4|| '.'|| \
dpo.act_segment5|| '.'|| \
dpo.act_segment6|| '.'|| \
dpo.act_segment7|| '.'|| \
dpo.act_segment8|| '.'|| \
dpo.act_segment9 AS default_expense_account, \
HAOU.NAME hr_organization, \
(CASE \
   WHEN PAAF.employment_category = 'IN' THEN 'Employee' \
   ELSE (SELECT decode(typ.system_person_type,'EX_EMP_APL','Employee','EX_EMP','Employee','EX_CWK','Contingent Worker') \
         FROM   hr.per_person_types typ, \
                hr.per_person_type_usages_f ptuf1 \
         WHERE  ptuf1.person_id = PAPF.person_id \
             AND    ptuf1.person_type_id = typ.person_type_id \
             AND   (TRUNC(SYSDATE) BETWEEN PTUF1.EFFECTIVE_START_DATE AND PTUF1.EFFECTIVE_END_DATE) \
             AND    typ.system_person_type IN('EX_EMP_APL', 'EX_EMP', 'EX_CWK') \
             AND    ROWNUM = 1) \
       END)AS identity_type, \
    (SELECT ter.territory_short_name FROM fnd_territories_tl ter WHERE  ter.territory_code = loc.country AND  ter.LANGUAGE='US') Country, \
    (SELECT ter.last_update_date     FROM fnd_territories_tl ter WHERE  ter.territory_code = loc.country AND  ter.LANGUAGE='US') Country_last_update, \
    (SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:"?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'W1' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM   hr.per_phones pp2 \
                       WHERE  pp2.parent_table = pp.parent_table \
                       AND    pp2.parent_id    = pp.parent_id \
                       AND    pp2.phone_type   = pp.phone_type)) Work_Primary, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:""?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'WM' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM   hr.per_phones pp2 \
                       WHERE  pp2.parent_table = pp.parent_table \
                       AND    pp2.parent_id    = pp.parent_id \
                       AND    pp2.phone_type   = pp.phone_type)) Work_Mobile, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:""?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type = 'WE' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM hr.per_phones pp2 \
                       WHERE pp2.parent_table = pp.parent_table \
                       AND pp2.parent_id      = pp.parent_id \
                       AND pp2.phone_type     = pp.phone_type)) Extension, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:"?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'WF' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE)  BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id    = PAPF.person_id \
 AND    pp.phone_id     = (SELECT MAX(pp2.phone_id) \
                           FROM   hr.per_phones pp2 \
                           WHERE  pp2.parent_table = pp.parent_table \
                           AND    pp2.parent_id    = pp.parent_id \
                               AND    pp2.phone_type   = pp.phone_type)) Work_Fax, \
    (SELECT MAX(pp.last_update_date) \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type IN ('WF','WM','W1','WE') \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE)  BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id    = PAPF.person_id) Phone_last_update, \
HAOU.NAME organization_name, \
(SELECT SUBSTR(listagg(NVL(employee_number,npw_number),'|') \
 within GROUP (ORDER BY NVL(employee_number,npw_number))||'|',0,INSTR(listagg(NVL(employee_number,npw_number),'|') \
 within GROUP (ORDER BY NVL(employee_number,npw_number))||'|','|') -1) \
 FROM   per_all_people_f \
 WHERE person_id = (SELECT employee_id \
                    FROM   fnd_user \
                    WHERE  user_id=papf.created_by)) AS CREATED_BY, \
 NVL((SELECT pei.pei_information1 \
      FROM   hr.per_people_extra_info pei \
      WHERE  pei.information_type LIKE 'XX_UL_Service_Desk_Level' \
      AND    pei.person_id = PAPF.person_id \
       ),DECODE(PJ.attribute5,'E','Gold','D','Silver',NULL)) VIP_Status, \
    (SELECT last_update_date \
     FROM   hr.per_people_extra_info pei \
     WHERE  pei.information_type LIKE 'XX_UL_Service_Desk_Level' \
     AND    pei.person_id = PAPF.person_id) VIP_Status_last_update, \
    GREATEST( \
        NVL(PAPF.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PPT.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PPU.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PAAF.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(SUP.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PJ.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(HAOU.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(LOC.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(dpo.GREATEST_LAST_UPDATE_DATE,:fromDate) \
    ) UPDATE_DATE \
    ,'Terminated' Status \
    FROM PER_ALL_PEOPLE_F PAPF, \
        PER_PERIODS_OF_SERVICE PPS, \
        PER_PERSON_TYPES PPT , \
        PER_PERSON_TYPE_USAGES_F PPU, \
        PER_ALL_ASSIGNMENTS_F PAAF, \
        PER_ALL_PEOPLE_F SUP, \
        PER_JOBS PJ, \
        PER_GRADES PG, \
        HR_ALL_ORGANIZATION_UNITS HAOU, \
        PER_PERIODS_OF_PLACEMENT POP, \
        HR_LOCATIONS_ALL LOC, \
        hr_pay_interface_accounting_v dpo \
    WHERE PPT.SYSTEM_PERSON_TYPE IN ('EMP','CWK') \
        AND PAAF.assignment_type in ('E','C') \
        AND PPU.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
        AND PPU.PERSON_ID = PAPF.PERSON_ID \
        AND PAAF.PERSON_ID = PAPF.PERSON_ID \
        AND PAAF.PRIMARY_FLAG = 'Y' \
        AND PAAF.SUPERVISOR_ID = SUP.person_id(+) \
        AND PAAF.job_id  = PJ.job_id(+) \
        AND PAAF.grade_id = PG.grade_id(+) \
        AND PAAF.organization_id = HAOU.organization_id(+) \
        AND PAAF.PERSON_ID = POP.PERSON_ID (+) \
        AND NVL(papf.current_employee_flag,nvl(papf.current_npw_flag,'N')) = 'Y' \
        AND PAAF.location_id = LOC.location_id (+) \
AND PAAF.assignment_id = dpo.assignment_id(+) \
        AND greatest( \
                NVL(PAPF.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PAAF.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PPS.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PPU.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(POP.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PPT.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(SUP.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PJ.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(HAOU.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(LOC.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(dpo.GREATEST_LAST_UPDATE_DATE,:fromDate) \
                ) between :fromDate AND :toDate \
        AND PAAF.period_of_service_id = PPS.period_of_service_id(+) \
        AND ((POP.ACTUAL_TERMINATION_DATE BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE) or \
       (PPS.ACTUAL_TERMINATION_DATE BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE) ) \
        AND ((POP.ACTUAL_TERMINATION_DATE BETWEEN PAAF.EFFECTIVE_START_DATE AND PAAF.EFFECTIVE_END_DATE) or \
       (PPS.ACTUAL_TERMINATION_DATE BETWEEN PAAF.EFFECTIVE_START_DATE AND PAAF.EFFECTIVE_END_DATE)) \
        AND (TRUNC(SYSDATE-6/24) BETWEEN SUP.EFFECTIVE_START_DATE(+) AND SUP.EFFECTIVE_END_DATE(+)) \
        AND ((PAPF.PERSON_ID = POP.PERSON_ID) or (PAPF.PERSON_ID = PPS.PERSON_ID)) \
        AND ((POP.ACTUAL_TERMINATION_DATE = PAPF.EFFECTIVE_END_DATE) or (PPS.ACTUAL_TERMINATION_DATE = PAPF.EFFECTIVE_END_DATE )) \
        AND NOT EXISTS(SELECT 1 \
                       FROM hr.per_all_people_f per1, \
                            hr.per_person_type_usages_f ptuf, \
                            hr.per_person_types ppt \
                       WHERE TRUNC (SYSDATE) BETWEEN per1.effective_start_date AND per1.effective_end_date \
                       AND   TRUNC(SYSDATE) BETWEEN ptuf.effective_start_date AND ptuf.effective_end_date \
                       AND per1.person_id = ptuf.person_id \
                       AND ptuf.person_type_id = ppt.person_type_id \
                       AND (per1.person_id = papf.person_id or per1.employee_number = papf.employee_number or per1.npw_number = papf.npw_number or per1.npw_number=papf.employee_number or per1.employee_number=papf.npw_number) \
                       AND ppt.system_person_type IN ('EMP','CWK')) \
UNION \
SELECT PAPF.PERSON_ID AS PERSON_ID1, \
    PAPF.PERSON_ID AS PERSON_ID2, \
    PAPF.FIRST_NAME AS FIRST_NAME, \
    PAPF.LAST_NAME AS LAST_NAME, \
    PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS, \
    PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE, \
    PPT.SYSTEM_PERSON_TYPE AS SYSTEM_PERSON_TYPE, \
    TO_CHAR(NVL(PPS.DATE_START,POP.DATE_START),'DD-MON-YYYY')  EFFECTIVE_START_DATE, \
    NVL(papf.employee_number,papf.npw_number) as EMPLOYEE_NUMBER, \
    DECODE(TO_CHAR(PAPF.EFFECTIVE_END_DATE,'DD-MON-YYYY'),'31-DEC-4712',NULL,TO_CHAR(PAPF.EFFECTIVE_END_DATE+6/24,'DD-MON-YYYY')) AS EFFECTIVE_END_DATE, \
    PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID , \
    PAAF.SUPERVISOR_ID AS SUPERVISOR_ID , \
    (select substr((LISTAGG(xyz.EMPLOYEE_NUMBER, '|') WITHIN GROUP (ORDER BY xyz.EMPLOYEE_NUMBER))||'|',0,instr((LISTAGG(xyz.EMPLOYEE_NUMBER, '|') \
WITHIN GROUP (ORDER BY xyz.EMPLOYEE_NUMBER))||'|', '|')-1 ) \
from PER_ALL_PEOPLE_F xyz where xyz.person_id=PAAF.SUPERVISOR_ID) as MANAGER_EMP_NO, \
    SUP.FULL_NAME AS SUPERVISOR_NAME, \
    PJ.NAME AS JOB, \
    PG.NAME AS GRADE, \
    HAOU.NAME AS DEPARTMENT, \
    'Internal User' as USERORGINDICATOR, \
    TO_CHAR(PAAF.projected_assignment_end,'DD-MON-YYYY') as projected_end_date, \
    nvl(PAAF.work_at_home,'N') as home_worker_flag, \
DECODE(NVL(papf.current_employee_flag,papf.current_npw_flag),'Y','A','T') as Assignment_Status, \
HAOU.NAME business_group, \
PAPF.known_as preferred_name, \
PAPF.MIDDLE_NAMES, \
PAPF.full_name Full_Name, \
LOC.location_code as LOCATION, \
LOC.attribute6 as Region, \
LOC.country as country_Code, \
LOC.address_line_1, \
LOC.address_line_2, \
LOC.town_or_city as town_or_city, \
LOC.region_2 as region_2, \
LOC.postal_code as postal_code, \
dpo.act_segment1|| '.'|| \
dpo.act_segment2|| '.'|| \
dpo.act_segment3|| '.'|| \
dpo.act_segment4|| '.'|| \
dpo.act_segment5|| '.'|| \
dpo.act_segment6|| '.'|| \
dpo.act_segment7|| '.'|| \
dpo.act_segment8|| '.'|| \
dpo.act_segment9 AS default_expense_account, \
HAOU.NAME hr_organization, \
(CASE \
   WHEN PAAF.employment_category = 'IN' THEN 'Employee' \
   ELSE (SELECT DECODE(typ.user_person_type,'Employee and Applicant','Employee',typ.user_person_type) \
         FROM   hr.per_person_types typ, \
                hr.per_person_type_usages_f ptuf1 \
         WHERE  ptuf1.person_id = PAPF.person_id \
             AND    ptuf1.person_type_id = typ.person_type_id \
             AND    (papf.effective_start_date BETWEEN PTUF1.EFFECTIVE_START_DATE AND PTUF1.EFFECTIVE_END_DATE) \
             AND    typ.system_person_type IN ('EMP_APL', 'EMP', 'CWK') ) \
       END)AS identity_type, \
    (SELECT ter.territory_short_name FROM fnd_territories_tl ter WHERE  ter.territory_code = loc.country AND  ter.LANGUAGE='US') Country, \
    (SELECT ter.last_update_date     FROM fnd_territories_tl ter WHERE  ter.territory_code = loc.country AND  ter.LANGUAGE='US') Country_last_update, \
    (SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:"?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'W1' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM   hr.per_phones pp2 \
                       WHERE  pp2.parent_table = pp.parent_table \
                       AND    pp2.parent_id    = pp.parent_id \
                       AND    pp2.phone_type   = pp.phone_type)) Work_Primary, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:""?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'WM' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM   hr.per_phones pp2 \
                       WHERE  pp2.parent_table = pp.parent_table \
                       AND    pp2.parent_id    = pp.parent_id \
                       AND    pp2.phone_type   = pp.phone_type)) Work_Mobile, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:""?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type = 'WE' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE) BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id = PAPF.person_id \
 AND    pp.phone_id = (SELECT MAX(pp2.phone_id) \
                       FROM hr.per_phones pp2 \
                       WHERE pp2.parent_table = pp.parent_table \
                       AND pp2.parent_id      = pp.parent_id \
                       AND pp2.phone_type     = pp.phone_type)) Extension, \
(SELECT TRANSLATE(pp.phone_number,'+1234567890-./()[] .,<>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~!@#$%^&*_=|:"?/','+1234567890') \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type   = 'WF' \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE)  BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id    = PAPF.person_id \
 AND    pp.phone_id     = (SELECT MAX(pp2.phone_id) \
                           FROM   hr.per_phones pp2 \
                           WHERE  pp2.parent_table = pp.parent_table \
                           AND    pp2.parent_id    = pp.parent_id \
                               AND    pp2.phone_type   = pp.phone_type)) Work_Fax, \
    (SELECT MAX(pp.last_update_date) \
 FROM   hr.per_phones pp \
 WHERE  pp.phone_type IN ('WF','WM','W1','WE') \
 AND    pp.parent_table = 'PER_ALL_PEOPLE_F' \
 AND    TRUNC(SYSDATE)  BETWEEN NVL(pp.date_from,TRUNC(SYSDATE)) AND NVL(pp.date_to,TRUNC(SYSDATE)) \
 AND    pp.parent_id    = PAPF.person_id) Phone_last_update, \
HAOU.NAME organization_name, \
(SELECT SUBSTR(listagg(NVL(employee_number,npw_number),'|') \
 within GROUP (ORDER BY NVL(employee_number,npw_number))||'|',0,INSTR(listagg(NVL(employee_number,npw_number),'|') \
 within GROUP (ORDER BY NVL(employee_number,npw_number))||'|','|') -1) \
 FROM   per_all_people_f \
 WHERE person_id = (SELECT employee_id \
                    FROM   fnd_user \
                    WHERE  user_id=papf.created_by)) AS CREATED_BY, \
 NVL((SELECT pei.pei_information1 \
      FROM   hr.per_people_extra_info pei \
      WHERE  pei.information_type LIKE 'XX_UL_Service_Desk_Level' \
      AND    pei.person_id = PAPF.person_id \
       ),DECODE(PJ.attribute5,'E','Gold','D','Silver',NULL)) VIP_Status, \
    (SELECT last_update_date \
     FROM   hr.per_people_extra_info pei \
     WHERE  pei.information_type LIKE 'XX_UL_Service_Desk_Level' \
     AND    pei.person_id = PAPF.person_id) VIP_Status_last_update, \
    GREATEST( \
        NVL(PAPF.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PPT.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PPU.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PAAF.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(SUP.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(PJ.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(HAOU.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(LOC.LAST_UPDATE_DATE,:fromDate) \
        ,NVL(dpo.GREATEST_LAST_UPDATE_DATE,:fromDate) \
    ) UPDATE_DATE \
    ,'Future Hires' Status \
    FROM PER_ALL_PEOPLE_F PAPF, \
        PER_PERIODS_OF_SERVICE PPS, \
        PER_PERSON_TYPES PPT , \
        PER_PERSON_TYPE_USAGES_F PPU, \
        PER_ALL_ASSIGNMENTS_F PAAF, \
        PER_ALL_PEOPLE_F SUP, \
        PER_JOBS PJ, \
        PER_GRADES PG, \
        HR_ALL_ORGANIZATION_UNITS HAOU, \
        PER_PERIODS_OF_PLACEMENT POP, \
        HR_LOCATIONS_ALL LOC, \
        hr_pay_interface_accounting_v dpo \
    WHERE PPT.SYSTEM_PERSON_TYPE IN ('EMP','CWK') \
        AND PAAF.assignment_type in ('E','C') \
        AND PPU.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
        AND PPU.PERSON_ID = PAPF.PERSON_ID \
        AND PAAF.PERSON_ID = PAPF.PERSON_ID \
        AND PAAF.PRIMARY_FLAG = 'Y' \
        AND PAAF.SUPERVISOR_ID = SUP.person_id(+) \
        AND PAAF.job_id  = PJ.job_id(+) \
        AND PAAF.grade_id = PG.grade_id(+) \
        AND PAAF.organization_id = HAOU.organization_id(+) \
        AND PAAF.PERSON_ID = POP.PERSON_ID (+) \
        AND PAAF.location_id = LOC.location_id (+) \
AND PAAF.assignment_id = dpo.assignment_id(+) \
        AND NVL(papf.current_employee_flag,nvl(papf.current_npw_flag,'N')) = 'Y' \
        AND greatest( \
                NVL(PAPF.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PAAF.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PPS.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PPU.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(POP.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PPT.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(SUP.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(PJ.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(HAOU.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(LOC.LAST_UPDATE_DATE,:fromDate) \
                ,NVL(dpo.GREATEST_LAST_UPDATE_DATE,:fromDate) \
            ) between :fromDate AND :toDate \
        AND PAAF.period_of_service_id = PPS.period_of_service_id(+) \
        AND SUP.CURRENT_EMPLOYEE_FLAG(+) = 'Y' \
        AND ((TRUNC(PPS.DATE_START) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE) or \
       (TRUNC(POP.DATE_START) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE)) \
        AND (PAAF.EFFECTIVE_START_DATE >= TRUNC(PPS.DATE_START) or PAAF.EFFECTIVE_START_DATE >= TRUNC(POP.DATE_START)) \
        AND SUP.EFFECTIVE_START_DATE(+) <= PAAF.EFFECTIVE_START_DATE \
        AND SUP.EFFECTIVE_END_DATE(+) > TRUNC(SYSDATE+18/24) \
        AND ((TRUNC(PPS.DATE_START) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE) or \
       (TRUNC(POP.DATE_START) BETWEEN PPU.EFFECTIVE_START_DATE AND PPU.EFFECTIVE_END_DATE)) \
        AND ((PPS.DATE_START > (SYSDATE+18/24)) or (POP.DATE_START > (SYSDATE+18/24))) \
        AND ((PAPF.PERSON_ID = PPS.PERSON_ID) or (PAPF.PERSON_ID = POP.PERSON_ID)) \
        AND ((PAPF.EFFECTIVE_START_DATE = PPS.DATE_START) or (PAPF.EFFECTIVE_START_DATE = POP.DATE_START)) \
        ) \
        WHERE EFFECTIVE_START_DATE < TRUNC(SYSDATE)+14 \
        AND FIRST_NAME IS NOT NULL \
        AND LAST_NAME IS NOT NULL \
        AND EMPLOYEE_NUMBER IS NOT NULL \
        AND MANAGER_EMP_NO IS NOT NULL \
        AND LOCATION IS NOT NULL \
        AND HR_ORGANIZATION IS NOT NULL \
        AND ROUND((greatest(update_date, \
                           NVL(Country_last_update,:fromDate), \
                           NVL(Phone_last_update,:fromDate), \
                           NVL(VIP_Status_last_update,:fromDate)) - TO_DATE('01011970', 'DDMMYYYY')) * 1440 *60 *1000) > :lastExecutionTime \
      and employee_number in ('11826')  order by EMPLOYEE_NUMBER asc, TO_DATE(EFFECTIVE_START_DATE,'DD-MON-YYYY') asc 

		
#This query is used for fetching the deleted persons.This should not be modified
DeletedPersons=SELECT DISTINCT PERSON_ID FROM PER_ALL_PEOPLE_F ORDER BY PERSON_ID


#Test=SELECT PAPF.PERSON_ID AS PERSON_ID1,PAPF.PERSON_ID AS PERSON_ID2,PAPF.FIRST_NAME AS FIRST_NAME,PAPF.LAST_NAME AS LAST_NAME,\
#		  PAPF.EMAIL_ADDRESS AS EMAIL_ADDRESS,PPT.USER_PERSON_TYPE AS USER_PERSON_TYPE,\
#		  PAPF.EFFECTIVE_START_DATE AS EFFECTIVE_START_DATE,PAPF.EMPLOYEE_NUMBER AS EMPLOYEE_NUMBER,\
#		  PAPF.EFFECTIVE_END_DATE AS EFFECTIVE_END_DATE,PAPF.BUSINESS_GROUP_ID AS BUSINESS_GROUP_ID FROM PER_ALL_PEOPLE_F PAPF,\
#		  PER_PERSON_TYPES PPT WHERE PAPF.PERSON_TYPE_ID = PPT.PERSON_TYPE_ID \
#		  AND  PPT>USER_PERSON_TYPE IN('Applicant') \
#		  AND PAPF.BUSINESS_GROUP_ID = :businessGroupID \	
#		  AND(TRUNC(SYSDATE) BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE) \
#		  AND PAPF.EFFECTIVE_START_DATE BETWEEN :fromDate AND :toDate \
#		  AND (ROUND((PAPF.LAST_UPDATE_DATE -TO_DATE('01011970', 'DDMMYYYY')) *1440 *60 *1000) > :lastExecutionTime) \
#		  ORDER BY PAPF.PERSON_ID
			
